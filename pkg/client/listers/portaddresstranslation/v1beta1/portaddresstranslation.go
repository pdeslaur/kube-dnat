/*
Copyright The Kubernetes Authors.

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
*/

// Code generated by lister-gen. DO NOT EDIT.

package v1beta1

import (
	v1beta1 "github.com/pdeslaur/kube-pat/pkg/apis/portaddresstranslation/v1beta1"
	"k8s.io/apimachinery/pkg/api/errors"
	"k8s.io/apimachinery/pkg/labels"
	"k8s.io/client-go/tools/cache"
)

// PortAddressTranslationLister helps list PortAddressTranslations.
type PortAddressTranslationLister interface {
	// List lists all PortAddressTranslations in the indexer.
	List(selector labels.Selector) (ret []*v1beta1.PortAddressTranslation, err error)
	// PortAddressTranslations returns an object that can list and get PortAddressTranslations.
	PortAddressTranslations(namespace string) PortAddressTranslationNamespaceLister
	PortAddressTranslationListerExpansion
}

// portAddressTranslationLister implements the PortAddressTranslationLister interface.
type portAddressTranslationLister struct {
	indexer cache.Indexer
}

// NewPortAddressTranslationLister returns a new PortAddressTranslationLister.
func NewPortAddressTranslationLister(indexer cache.Indexer) PortAddressTranslationLister {
	return &portAddressTranslationLister{indexer: indexer}
}

// List lists all PortAddressTranslations in the indexer.
func (s *portAddressTranslationLister) List(selector labels.Selector) (ret []*v1beta1.PortAddressTranslation, err error) {
	err = cache.ListAll(s.indexer, selector, func(m interface{}) {
		ret = append(ret, m.(*v1beta1.PortAddressTranslation))
	})
	return ret, err
}

// PortAddressTranslations returns an object that can list and get PortAddressTranslations.
func (s *portAddressTranslationLister) PortAddressTranslations(namespace string) PortAddressTranslationNamespaceLister {
	return portAddressTranslationNamespaceLister{indexer: s.indexer, namespace: namespace}
}

// PortAddressTranslationNamespaceLister helps list and get PortAddressTranslations.
type PortAddressTranslationNamespaceLister interface {
	// List lists all PortAddressTranslations in the indexer for a given namespace.
	List(selector labels.Selector) (ret []*v1beta1.PortAddressTranslation, err error)
	// Get retrieves the PortAddressTranslation from the indexer for a given namespace and name.
	Get(name string) (*v1beta1.PortAddressTranslation, error)
	PortAddressTranslationNamespaceListerExpansion
}

// portAddressTranslationNamespaceLister implements the PortAddressTranslationNamespaceLister
// interface.
type portAddressTranslationNamespaceLister struct {
	indexer   cache.Indexer
	namespace string
}

// List lists all PortAddressTranslations in the indexer for a given namespace.
func (s portAddressTranslationNamespaceLister) List(selector labels.Selector) (ret []*v1beta1.PortAddressTranslation, err error) {
	err = cache.ListAllByNamespace(s.indexer, s.namespace, selector, func(m interface{}) {
		ret = append(ret, m.(*v1beta1.PortAddressTranslation))
	})
	return ret, err
}

// Get retrieves the PortAddressTranslation from the indexer for a given namespace and name.
func (s portAddressTranslationNamespaceLister) Get(name string) (*v1beta1.PortAddressTranslation, error) {
	obj, exists, err := s.indexer.GetByKey(s.namespace + "/" + name)
	if err != nil {
		return nil, err
	}
	if !exists {
		return nil, errors.NewNotFound(v1beta1.Resource("portaddresstranslation"), name)
	}
	return obj.(*v1beta1.PortAddressTranslation), nil
}
